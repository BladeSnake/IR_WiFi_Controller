#include "esphome.h"

class MyAC : public esphome::climate::Climate, public esphome::Component {
 public:
  void setup() override {
  }

  esphome::climate::ClimateTraits traits() override {
    auto traits = esphome::climate::ClimateTraits();
    traits.set_supports_current_temperature(true);
    traits.set_supports_two_point_target_temperature(false);
    traits.set_supports_auto_mode(true);
    traits.set_supports_cool_mode(true);
    traits.set_supports_heat_mode(true);
    traits.set_supports_dry_mode(true);
    traits.set_supports_fan_only_mode(true);
    traits.set_supports_fan_mode_auto(true);
    traits.set_supports_fan_mode_low(true);
    traits.set_supports_fan_mode_medium(true);
    traits.set_supports_fan_mode_high(true);
    return traits;
  }

  void control(const esphome::climate::ClimateCall &call) override {
    if (call.get_mode().has_value()) {
      esphome::climate::ClimateMode mode = *call.get_mode();
      void control(const climate::ClimateCall &call) override {
        if (call.get_mode().has_value()) {
          ClimateMode mode = *call.get_mode();
          if (mode == climate::CLIMATE_MODE_OFF) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6103, -7454, 502, -1679, 530, -1650, 502, -1679, 502, -1677, 503, -1676, 503, -1677, 503, -1677, 502, -1678, 527, -602, 528, -602, 527, -604, 526, -604, 526, -606, 523, -631, 499, -631, 498, -631, 499, -1682, 499, -1681, 499, -1682, 499, -1681, 499, -1682, 498, -1682, 498, -1682, 498, -1683, 498, -632, 498, -631, 499, -631, 500, -630, 499, -632, 498, -632, 498, -632, 499, -631, 499, -1683, 498, -1685, 497, -1683, 500, -1681, 498, -1683, 498, -1683, 498, -1683, 498, -1682, 498, -632, 499, -631, 498, -632, 498, -632, 500, -630, 499, -631, 499, -631, 499, -631, 498, -1683, 499, -1682, 498, -1684, 498, -631, 498, -1683, 498, -1682, 498, -1683, 498, -1682, 498, -632, 498, -631, 502, -628, 498, -1683, 499, -631, 498, -632, 498, -631, 498, -632, 498, -1683, 498, -632, 498, -1684, 499, -630, 498, -1683, 498, -632, 498, -1683, 498, -1683, 498, -632, 498, -1683, 497, -633, 497, -1684, 498, -632, 497, -1683, 498, -634, 495, -632, 498, -632, 498, -1683, 498, -632, 498, -1683, 497, -632, 500, -1682, 502, -627, 498, -1683, 498, -1687, 495, -632, 497, -1684, 498, -632, 497, -1684, 498, -632, 497, -1683, 498, -632, 497, -7465, 523});
            call.perform();
          } else if (mode == climate::CLIMATE_MODE_ON) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6105, -7457, 528, -1653, 529, -1652, 501, -1679, 502, -1679, 502, -1678, 503, -1678, 503, -1677, 503, -1678, 503, -627, 528, -603, 527, -603, 528, -603, 525, -605, 525, -606, 524, -606, 524, -606, 524, -1657, 524, -1657, 524, -1658, 524, -1657, 523, -1657, 524, -1657, 525, -1656, 525, -1657, 524, -606, 524, -608, 522, -605, 526, -605, 524, -606, 524, -606, 528, -602, 524, -606, 524, -605, 524, -1657, 527, -1656, 523, -1658, 524, -1657, 524, -1658, 522, -1658, 523, -1658, 524, -1656, 524, -606, 523, -607, 523, -606, 524, -607, 525, -604, 524, -606, 526, -604, 523, -1658, 523, -607, 523, -1659, 524, -606, 524, -1659, 522, -1660, 522, -1660, 521, -1661, 521, -631, 498, -1683, 499, -635, 495, -1660, 522, -631, 498, -632, 499, -631, 499, -632, 498, -1682, 499, -631, 499, -1682, 498, -631, 501, -1681, 499, -631, 499, -1661, 521, -1659, 522, -612, 518, -1659, 522, -632, 498, -1660, 522, -608, 522, -1660, 521, -609, 521, -631, 499, -609, 521, -1660, 522, -631, 499, -1660, 521, -609, 521, -1683, 499, -610, 520, -1659, 523, -1660, 522, -631, 499, -1660, 522, -608, 522, -1659, 522, -609, 522, -1659, 522, -611, 519, -7441, 549});
            call.perform();
          } else if (mode == climate::CLIMATE_MODE_HEAT) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6099, -7455, 501, -1679, 529, -1652, 502, -1678, 504, -1677, 502, -1678, 504, -1677, 504, -1677, 504, -1677, 529, -601, 528, -603, 527, -603, 526, -605, 525, -607, 523, -607, 523, -630, 499, -631, 499, -1682, 499, -1659, 522, -1682, 499, -1659, 521, -1683, 498, -1683, 499, -1683, 498, -1683, 498, -632, 498, -631, 499, -631, 499, -631, 499, -631, 501, -629, 499, -631, 498, -632, 499, -630, 499, -1682, 498, -1683, 498, -1683, 498, -1683, 499, -1682, 499, -1683, 499, -1681, 499, -1682, 499, -631, 499, -631, 501, -629, 498, -631, 499, -631, 498, -631, 498, -632, 498, -1683, 498, -632, 498, -1683, 498, -631, 499, -1683, 498, -631, 499, -1682, 498, -1683, 498, -632, 498, -1683, 502, -628, 499, -1682, 498, -632, 499, -1683, 498, -632, 498, -632, 498, -632, 498, -1683, 498, -1682, 499, -631, 498, -1683, 498, -1684, 498, -1683, 498, -631, 498, -1682, 498, -633, 497, -631, 499, -1683, 499, -632, 497, -632, 498, -636, 494, -1684, 497, -632, 498, -1683, 498, -632, 498, -1683, 498, -633, 498, -1683, 498, -632, 498, -1683, 497, -1684, 498, -632, 498, -1683, 498, -632, 498, -1684, 498, -632, 498, -1683, 498, -632, 501, -7462, 525});
            call.perform();
          } else if (mode == climate::CLIMATE_MODE_DRY) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6107, -7457, 501, -1678, 502, -1677, 504, -1677, 503, -1678, 504, -1677, 504, -1678, 504, -1678, 530, -1652, 529, -605, 525, -603, 526, -605, 525, -606, 524, -606, 524, -607, 528, -602, 524, -606, 524, -1659, 522, -1658, 524, -1658, 523, -1659, 523, -1658, 523, -1658, 524, -1657, 524, -1657, 524, -606, 523, -606, 524, -606, 525, -605, 523, -607, 523, -607, 523, -607, 523, -607, 523, -607, 523, -1659, 522, -1658, 523, -1658, 524, -1658, 523, -1658, 523, -1658, 525, -1656, 523, -1658, 523, -607, 526, -604, 523, -607, 523, -607, 523, -607, 523, -607, 523, -607, 524, -1657, 522, -607, 523, -1659, 522, -607, 523, -1658, 523, -607, 523, -607, 522, -1660, 522, -607, 522, -1659, 522, -608, 522, -1660, 522, -607, 523, -1659, 522, -1659, 522, -608, 522, -609, 521, -1660, 522, -1659, 521, -608, 522, -1659, 524, -1657, 522, -608, 522, -1659, 522, -1659, 521, -609, 521, -609, 521, -1659, 521, -608, 521, -609, 521, -1660, 520, -609, 521, -632, 497, -1660, 520, -609, 520, -1661, 523, -607, 520, -1684, 498, -632, 497, -1684, 497, -1684, 498, -632, 498, -1683, 497, -633, 498, -1683, 498, -632, 498, -1683, 497, -632, 498, -7466, 523});
            call.perform();
          } else if (mode == climate::CLIMATE_MODE_FAN_ONLY) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6143, -7453, 503, -1678, 503, -1678, 504, -1678, 502, -1678, 504, -1676, 504, -1676, 504, -1678, 528, -1654, 527, -602, 527, -603, 526, -605, 525, -607, 523, -609, 521, -608, 522, -609, 521, -609, 522, -1660, 521, -1661, 520, -1661, 525, -1657, 521, -1659, 521, -1660, 522, -1683, 498, -1684, 498, -632, 498, -632, 498, -631, 498, -632, 498, -632, 499, -632, 498, -632, 498, -632, 498, -632, 498, -1683, 497, -1684, 498, -1683, 498, -1684, 500, -1680, 498, -1684, 498, -1682, 499, -1682, 498, -632, 500, -630, 498, -632, 498, -632, 498, -632, 498, -632, 498, -632, 498, -1683, 498, -632, 498, -1683, 498, -632, 497, -1684, 498, -632, 498, -632, 497, -1684, 499, -630, 498, -1684, 497, -633, 502, -1679, 497, -633, 497, -1684, 498, -1684, 497, -633, 497, -633, 500, -1681, 497, -1684, 497, -633, 497, -1684, 497, -637, 494, -632, 498, -1684, 497, -1684, 497, -633, 497, -633, 497, -1685, 496, -633, 497, -1685, 497, -1684, 497, -633, 497, -633, 497, -1685, 498, -632, 497, -1684, 497, -633, 496, -1685, 496, -634, 497, -1684, 497, -1684, 499, -631, 497, -1685, 497, -633, 496, -1685, 497, -633, 497, -1685, 497, -633, 497, -7467, 522});
            call.perform();
          } else if (mode == climate::CLIMATE_MODE_COOL) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6105, -7457, 528, -1653, 529, -1652, 501, -1679, 502, -1679, 502, -1678, 503, -1678, 503, -1677, 503, -1678, 503, -627, 528, -603, 527, -603, 528, -603, 525, -605, 525, -606, 524, -606, 524, -606, 524, -1657, 524, -1657, 524, -1658, 524, -1657, 523, -1657, 524, -1657, 525, -1656, 525, -1657, 524, -606, 524, -608, 522, -605, 526, -605, 524, -606, 524, -606, 528, -602, 524, -606, 524, -605, 524, -1657, 527, -1656, 523, -1658, 524, -1657, 524, -1658, 522, -1658, 523, -1658, 524, -1656, 524, -606, 523, -607, 523, -606, 524, -607, 525, -604, 524, -606, 526, -604, 523, -1658, 523, -607, 523, -1659, 524, -606, 524, -1659, 522, -1660, 522, -1660, 521, -1661, 521, -631, 498, -1683, 499, -635, 495, -1660, 522, -631, 498, -632, 499, -631, 499, -632, 498, -1682, 499, -631, 499, -1682, 498, -631, 501, -1681, 499, -631, 499, -1661, 521, -1659, 522, -612, 518, -1659, 522, -632, 498, -1660, 522, -608, 522, -1660, 521, -609, 521, -631, 499, -609, 521, -1660, 522, -631, 499, -1660, 521, -609, 521, -1683, 499, -610, 520, -1659, 523, -1660, 522, -631, 499, -1660, 522, -608, 522, -1659, 522, -609, 522, -1659, 522, -611, 519, -7441, 549});
            call.perform();
          }
          this->mode = mode;
          this->publish_state();
        }

        if (call.get_target_temperature().has_value()) {
          float temp = *call.get_target_temperature();
          if (temp > this->target_temperature) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6075, -7452, 503, -1677, 530, -1650, 503, -1677, 503, -1677, 503, -1677, 503, -1678, 502, -1677, 504, -1677, 528, -601, 528, -602, 527, -605, 523, -604, 525, -606, 522, -608, 521, -613, 520, -604, 522, -1657, 523, -1657, 522, -1658, 523, -1678, 499, -1657, 522, -1658, 521, -1681, 498, -1659, 520, -631, 498, -630, 499, -630, 498, -631, 498, -631, 498, -630, 498, -631, 498, -630, 498, -1680, 498, -631, 498, -1681, 498, -1681, 498, -1680, 501, -1678, 498, -1682, 498, -1680, 498, -631, 498, -1681, 497, -631, 498, -630, 498, -631, 501, -628, 498, -631, 498, -631, 497, -1681, 498, -631, 497, -1681, 498, -630, 498, -1680, 498, -1680, 498, -1683, 496, -1681, 498, -631, 498, -1681, 497, -631, 498, -1681, 498, -631, 498, -631, 498, -631, 498, -631, 499, -1679, 497, -631, 498, -1681, 497, -631, 499, -1680, 497, -1682, 497, -1682, 497, -1681, 497, -632, 497, -1682, 497, -631, 498, -1684, 495, -630, 498, -631, 497, -631, 497, -631, 498, -631, 498, -1681, 500, -628, 498, -1681, 497, -631, 498, -1682, 497, -631, 498, -1681, 497, -1682, 497, -632, 500, -1678, 497, -631, 497, -1682, 497, -631, 497, -1683, 495, -631, 497, -7455, 523});
            call.perform();
          } else if (temp < this->target_temperature) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6109, -7456, 505, -1675, 503, -1678, 506, -1675, 505, -1678, 504, -1680, 500, -1677, 529, -1653, 529, -1652, 529, -601, 528, -603, 526, -605, 524, -607, 523, -607, 523, -607, 523, -607, 523, -607, 523, -1660, 522, -1658, 523, -1659, 522, -1659, 523, -1659, 523, -1659, 523, -1659, 522, -1659, 523, -607, 523, -607, 525, -605, 523, -607, 523, -607, 524, -609, 521, -607, 523, -607, 524, -606, 523, -608, 522, -1659, 523, -1658, 523, -1659, 523, -1659, 523, -1659, 523, -1659, 523, -1658, 524, -1658, 523, -606, 523, -607, 523, -607, 524, -606, 524, -607, 523, -607, 524, -1658, 522, -607, 523, -1659, 522, -607, 523, -1659, 522, -1659, 522, -1659, 522, -1659, 523, -607, 523, -1658, 523, -606, 523, -1658, 523, -607, 523, -610, 519, -607, 522, -608, 523, -607, 522, -1659, 522, -1658, 523, -607, 523, -1659, 522, -1659, 522, -1658, 522, -1659, 522, -1660, 522, -608, 522, -608, 523, -1659, 522, -609, 521, -608, 522, -612, 518, -608, 522, -608, 522, -1659, 522, -608, 522, -1659, 523, -607, 522, -1661, 519, -608, 521, -1660, 521, -1659, 522, -608, 521, -1660, 521, -608, 522, -1660, 520, -609, 521, -1660, 520, -609, 521, -7441, 547});
            call.perform();
          }
          this->target_temperature = temp;
          this->publish_state();
        }

        if (call.get_fan_mode().has_value()) {
          ClimateFanMode fan_mode = *call.get_fan_mode();
          if (fan_mode == climate::CLIMATE_FAN_AUTO) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6077, -7454, 503, -1677, 503, -1678, 502, -1678, 504, -1677, 504, -1677, 503, -1678, 503, -1677, 528, -1653, 527, -602, 528, -602, 527, -604, 526, -605, 524, -610, 520, -608, 522, -609, 521, -631, 499, -1682, 498, -1681, 499, -1681, 498, -631, 498, -1683, 498, -1683, 498, -1682, 498, -1683, 498, -631, 498, -632, 502, -628, 498, -1683, 498, -632, 498, -631, 499, -631, 498, -632, 498, -1683, 498, -631, 498, -1684, 498, -632, 498, -1683, 497, -1683, 498, -1683, 498, -1683, 498, -632, 498, -1683, 502, -628, 498, -1683, 498, -632, 498, -633, 497, -633, 497, -633, 498, -1682, 498, -632, 498, -1684, 501, -629, 498, -1684, 497, -1684, 498, -1683, 498, -1683, 497, -633, 497, -1684, 498, -632, 498, -1684, 497, -633, 497, -633, 497, -633, 497, -633, 501, -1682, 495, -633, 498, -1684, 497, -633, 497, -1684, 498, -632, 497, -1685, 498, -1683, 497, -632, 498, -1684, 497, -633, 497, -1684, 498, -633, 496, -1685, 497, -633, 497, -633, 498, -633, 497, -1684, 497, -633, 498, -1684, 497, -633, 497, -1685, 498, -632, 497, -1683, 498, -1684, 497, -633, 497, -1685, 497, -633, 498, -1683, 497, -633, 498, -1684, 498, -633, 497, -7467, 523});
            call.perform();
          } else if (fan_mode == climate::CLIMATE_FAN_LOW) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6076, -7454, 530, -1649, 529, -1650, 503, -1678, 503, -1677, 503, -1678, 503, -1677, 503, -1678, 503, -1678, 528, -602, 528, -602, 527, -603, 526, -605, 528, -605, 522, -632, 498, -630, 499, -631, 499, -1682, 499, -1682, 500, -1681, 499, -1683, 498, -1683, 499, -1683, 498, -632, 499, -1682, 499, -631, 499, -634, 496, -631, 499, -632, 498, -631, 503, -628, 498, -1683, 499, -631, 499, -1682, 499, -631, 499, -631, 499, -632, 498, -1683, 501, -1680, 499, -1683, 498, -1682, 498, -632, 498, -1685, 496, -1683, 499, -1682, 499, -631, 498, -635, 495, -632, 502, -628, 498, -1684, 497, -632, 499, -1682, 498, -632, 503, -1678, 499, -631, 498, -631, 498, -1684, 499, -630, 498, -1684, 498, -631, 499, -1683, 498, -631, 498, -1683, 498, -1683, 497, -636, 494, -1683, 497, -632, 498, -1684, 496, -632, 499, -1682, 498, -632, 498, -1683, 502, -1679, 498, -632, 498, -1683, 498, -633, 497, -1683, 498, -632, 498, -1684, 498, -632, 497, -633, 497, -632, 498, -1684, 497, -632, 498, -1683, 500, -630, 498, -1682, 498, -632, 498, -1684, 498, -1682, 498, -632, 498, -1684, 497, -633, 498, -1683, 497, -632, 498, -1683, 497, -633, 497, -7464, 523});
            call.perform();
          } else if (fan_mode == climate::CLIMATE_FAN_MEDIUM) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6109, -7454, 529, -1651, 502, -1678, 503, -1678, 503, -1677, 504, -1678, 504, -1677, 504, -1677, 503, -1677, 527, -602, 528, -602, 527, -604, 525, -605, 526, -604, 524, -608, 522, -630, 499, -609, 521, -1682, 499, -1659, 521, -1659, 522, -1659, 521, -1659, 522, -1660, 521, -1659, 522, -1682, 499, -630, 499, -632, 499, -630, 499, -631, 498, -631, 498, -632, 498, -632, 498, -631, 499, -631, 498, -1683, 498, -632, 501, -1680, 499, -1682, 498, -1682, 498, -1683, 498, -1683, 498, -1682, 498, -633, 497, -1682, 498, -631, 499, -631, 500, -630, 498, -632, 498, -631, 498, -1682, 498, -631, 498, -1682, 499, -635, 494, -1681, 498, -1683, 498, -631, 498, -1683, 499, -630, 498, -1683, 498, -631, 499, -1682, 498, -636, 494, -631, 498, -1683, 498, -631, 498, -1687, 494, -631, 498, -1683, 498, -633, 496, -1683, 498, -632, 497, -1683, 499, -1683, 497, -632, 498, -1686, 495, -631, 497, -1683, 498, -631, 500, -1681, 497, -632, 497, -632, 498, -631, 498, -1683, 498, -632, 498, -1683, 497, -632, 498, -1684, 496, -632, 498, -1682, 498, -1682, 498, -632, 498, -1683, 498, -631, 498, -1682, 497, -632, 498, -1683, 500, -629, 498, -7461, 524});
            call.perform();
          } else if (fan_mode == climate::CLIMATE_FAN_HIGH) {
            auto call = remote_transmitter.transmit_raw();
            call.set_id("ir_transmitter");
            call.set_code({6075, -7452, 502, -1678, 503, -1678, 503, -1677, 503, -1677, 503, -1677, 503, -1677, 503, -1676, 528, -1652, 528, -602, 530, -600, 526, -604, 525, -606, 523, -608, 522, -611, 519, -606, 522, -607, 523, -1657, 523, -1658, 522, -1658, 522, -1658, 521, -1659, 522, -1658, 522, -1659, 521, -1659, 522, -608, 522, -607, 522, -608, 522, -631, 499, -608, 522, -631, 498, -608, 521, -608, 521, -631, 499, -1682, 498, -632, 498, -1683, 498, -1683, 498, -1683, 499, -1682, 498, -1683, 499, -1685, 495, -632, 498, -1683, 498, -632, 497, -632, 498, -632, 498, -631, 499, -631, 498, -1683, 498, -631, 498, -1683, 498, -631, 498, -1683, 498, -632, 498, -1683, 498, -1683, 498, -631, 498, -1685, 496, -632, 498, -1682, 500, -630, 498, -1683, 498, -632, 497, -632, 498, -1682, 498, -632, 498, -1686, 494, -632, 498, -1683, 498, -635, 494, -1683, 498, -1683, 498, -631, 498, -1683, 498, -632, 498, -1683, 497, -632, 500, -1680, 498, -632, 498, -632, 499, -631, 497, -1683, 498, -632, 497, -1683, 497, -632, 498, -1683, 497, -632, 498, -1683, 497, -1682, 498, -632, 498, -1683, 497, -633, 497, -1683, 497, -634, 496, -1683, 498, -632, 497, -7465, 523});
            call.perform();
          }
          this->fan_mode = fan_mode;
          this->publish_state();
        }
      }
  };